    <!-- BEGIN ADDED BY footer.ejs -->
    <footer></footer>

    <script src="https://www.gstatic.com/firebasejs/3.6.6/firebase.js"></script>
    <script src="https://www.gstatic.com/firebasejs/3.6.6/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/3.6.6/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/3.6.6/firebase-database.js"></script>

    <script>
      /**
        * @function - String.prototype.format adds the format function to the String type, allowing dynamic content to be injected in specified positions (i.e. {0})
        * @returns - The formatted string, with replacements made for passed-in parameters
      */
      String.prototype.format = function() {
        var content = this;
        for (var i = 0; i < arguments.length; i++) {
          var replacement = '{' + i + '}';
          content = content.replace(replacement, arguments[i]);
        }
        return content;
      };

      // TODO: ADD EXPAND/COLLAPSE ALL FUNCTION

      /**
        * @function - calculateProgressPercentage
        * @param {array} checklist - list of skills sections, with completion statuses
        * @returns - Nothing
        * @calls updateProgressDisplay
      */
      function calculateProgressPercentage (checklist) {
        var maxPoints = 0,
            totalPoints = 0,
            totalSections = 0;
        // TODO: INTELLIGENTLY PARSE SKILLS WITH SUBSECTIONS
        for (var i = 0; i < checklist.length; i++) {
          maxPoints += checklist[i].value;
          if (checklist[i].complete){
            totalPoints += checklist[i].value;
          }
        }

        totalPercentage = (maxPoints !== 0)? totalPoints/maxPoints: 0;

totalPercentage = 0.35;

        updateProgressDisplay(totalPercentage);
      }

      /**
        * @function - updateProgressDisplay takes a decimal percentage and sends it to the UI. Updates header and progress bar content.
        * @param {float} percentage - The total completeness percentage
        * @returns - Nothing. Modifies global variables and DOM directly
      */
      function updateProgressDisplay (percentage) {

        var $progressBar = $(".total-completeness .progress-bar");

        $progressBar
          .removeClass("progress-bar-danger progress-bar-warning progress-bar-info progress-bar-success");

        if (totalPercentage <= 0.10) {
          $progressBar.addClass("progress-bar-danger");
        } else if (totalPercentage <= 0.35) {
          $progressBar.addClass("progress-bar-warning");
        } else if (totalPercentage < 0.90) {
          $progressBar.addClass("progress-bar-info");
        } else if (totalPercentage >= 0.90) {
          $progressBar.addClass("progress-bar-success");
        }

        $progressBar
          .css('width', totalPercentage * 100 + "%")
          .attr("aria-valuenow", totalPercentage * 100);

        formattedPercentage = totalPercentage.toLocaleString([locale, DEFAULT_LOCALE], {style: "percent"});

        $(".header-total-completeness").html(lang.HEADING_COMPLETENESS.format(formattedPercentage));
      }

      var lang,
          masterChecklist,
          userData,
          formattedPercentage,
          totalPercentage,
          DEFAULT_LOCALE = "en",
          locale = (window.navigator.userLanguage || window.navigator.language || DEFAULT_LOCALE).substr(0, 2).toLowerCase();
          cisId = "userid",
          firebaseConfig = {
            apiKey: "AIzaSyCba2vGgbYQoDWetBL3x6yIvVm_33cXlE0",
            authDomain: "familyhistoryskills.firebaseapp.com",
            databaseURL: "https://familyhistoryskills.firebaseio.com",
            storageBucket: "familyhistoryskills.appspot.com",
            messagingSenderId: "485405197780"
      };

      // TODO: ALSO HAVE LOCALLY STORED SKILLS, PROGRESS AND LANG JSON FOR FAST FIRST RENDER, AND AS A FALLBACK IN CASE FIREBASE IS INACCESSIBLE

      firebase.initializeApp(firebaseConfig);

      firebase.database().ref("/locales/" + locale).once("value").then(function(snapshot) {
        lang = snapshot.val();

        firebase.database().ref("/_skills_sections").once("value").then(function(snapshot) {
          masterChecklist = snapshot.val();
        });

        firebase.database().ref("/users/" + cisId).once("value").then(function(snapshot) {
          userData = snapshot.val();
          firebase.database().goOffline();

          $("main").removeClass("loading");
          $(".header-title").html(lang.HEADING_CHECKLIST);
          $(".header-subtitle").html(lang.HEADING_FOR_NAME.format(userData.name));
          $(".expand-collapse").html(lang.BUTTON_EXPAND_COLLAPSE);

          calculateProgressPercentage(masterChecklist);
        });
      });

      // TODO: ADD WATCH/ONCLICK ON CHECKBOXES TO CALL PERCENTAGE/AGGREGATE PERCENTAGE FUNCTION

    </script>

  </body>
</html>
